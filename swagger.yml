openapi: 3.0.0
info:
  title: Express TS API
  version: 1.0.0
  description: API for express-ts-api (auth endpoints)
servers:
  - url: http://localhost:3000

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Bad Request

  /auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized

  /profile:
    get:
      summary: Get current user's profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        membershipCode:
          type: string
        membershipLevel:
          type: string
        registrationDate:
          type: string
          format: date
        pointsBalance:
          type: integer

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string

    AuthResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
            email:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            phone:
              type: string
            membershipCode:
              type: string
            membershipLevel:
              type: string
            registrationDate:
              type: string
              format: date
            pointsBalance:
              type: integer
        token:
          type: string
